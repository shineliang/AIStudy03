{"ast":null,"code":"var _jsxFileName = \"/Users/shine/GitHub/AIStudy03/frontend/src/components/MemorySidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemorySidebar({\n  onClose\n}) {\n  _s();\n  const [memories, setMemories] = useState([]);\n  const [filterType, setFilterType] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [memoryTypes, setMemoryTypes] = useState([]);\n  useEffect(() => {\n    fetchMemories();\n  }, []);\n  const fetchMemories = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/memories');\n      const data = await response.json();\n      setMemories(data.memories);\n\n      // 提取所有记忆类型\n      const types = [...new Set(data.memories.map(item => item.type))];\n      setMemoryTypes(types);\n    } catch (error) {\n      console.error('获取记忆记录失败:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const filteredMemories = filterType ? memories.filter(item => item.type === filterType) : memories;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u8BB0\\u5FC6\\u8BB0\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: e => setFilterType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u6240\\u6709\\u7C7B\\u578B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), memoryTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-content\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\u52A0\\u8F7D\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : filteredMemories.length > 0 ? filteredMemories.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: item.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memory-type\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u7C7B\\u578B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), \" \", item.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memory-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u5185\\u5BB9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), \" \", item.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-message\",\n        children: filterType ? `没有找到${filterType}类型的记忆` : '暂无记忆记录'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(MemorySidebar, \"E/kJQfiguHh0O/rWWa2Q4t60GlE=\");\n_c = MemorySidebar;\nexport default MemorySidebar;\nvar _c;\n$RefreshReg$(_c, \"MemorySidebar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemorySidebar","onClose","_s","memories","setMemories","filterType","setFilterType","isLoading","setIsLoading","memoryTypes","setMemoryTypes","fetchMemories","response","fetch","data","json","types","Set","map","item","type","error","console","filteredMemories","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","index","length","created_at","content","_c","$RefreshReg$"],"sources":["/Users/shine/GitHub/AIStudy03/frontend/src/components/MemorySidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\n\nfunction MemorySidebar({ onClose }) {\n  const [memories, setMemories] = useState([]);\n  const [filterType, setFilterType] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [memoryTypes, setMemoryTypes] = useState([]);\n  \n  useEffect(() => {\n    fetchMemories();\n  }, []);\n  \n  const fetchMemories = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/memories');\n      const data = await response.json();\n      setMemories(data.memories);\n      \n      // 提取所有记忆类型\n      const types = [...new Set(data.memories.map(item => item.type))];\n      setMemoryTypes(types);\n    } catch (error) {\n      console.error('获取记忆记录失败:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const filteredMemories = filterType \n    ? memories.filter(item => item.type === filterType)\n    : memories;\n  \n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <h2>记忆记录</h2>\n        <button className=\"close-button\" onClick={onClose}>×</button>\n      </div>\n      \n      <div className=\"filter-container\">\n        <select \n          value={filterType} \n          onChange={(e) => setFilterType(e.target.value)}\n        >\n          <option value=\"\">所有类型</option>\n          {memoryTypes.map((type, index) => (\n            <option key={index} value={type}>{type}</option>\n          ))}\n        </select>\n      </div>\n      \n      <div className=\"sidebar-content\">\n        {isLoading ? (\n          <div className=\"loading\">加载中...</div>\n        ) : filteredMemories.length > 0 ? (\n          filteredMemories.map((item, index) => (\n            <div key={index} className=\"memory-item\">\n              <div className=\"timestamp\">{item.created_at}</div>\n              <div className=\"memory-type\">\n                <strong>类型:</strong> {item.type}\n              </div>\n              <div className=\"memory-content\">\n                <strong>内容:</strong> {item.content}\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"empty-message\">\n            {filterType ? `没有找到${filterType}类型的记忆` : '暂无记忆记录'}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MemorySidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}